% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/candidateRelocatedProteins.R
\name{candidateRelocatedProteins}
\alias{candidateRelocatedProteins}
\title{Identify candidate relocated proteins}
\usage{
candidateRelocatedProteins(sampleCls1, s1PSM, s1Quant, sampleCls2, s2PSM,
  s2Quant, annotation = FALSE, min.psm, pearson.cor)
}
\arguments{
\item{sampleCls1}{data.frame; merged classification,
combination of compartment and neighborhood classification.}

\item{s1PSM}{data.frame; minimum PSM count table
across ten TMT channel}

\item{s1Quant}{data.frame; fractionation quantification data}

\item{sampleCls2}{data.frame; merged classification,
combination of compartment and neighborhood classification.}

\item{s2PSM}{data.frame; minimum PSM count table
across ten TMT channel}

\item{s2Quant}{data.frame; fractionation quantification data}

\item{annotation}{boolean; labeling the selected proteins}

\item{min.psm}{numeric; minimum psm, peptide spectra matching value}

\item{pearson.cor}{numeric; pearson correlation threshold}
}
\value{
candidate.df
}
\description{
Identify candidate condition-dependent
relocated proteins by comparing neighborhood classifications
with respect to protein-protein pearson correlation and minumum PSM,
peptide spectrum matching, count.
}
\examples{
{

df <- loadData(SubCellBarCode::hcc827Ctrl)

c.prots <- calculateCoveredProtein(rownames(df), markerProteins[,1])

r.markers <- markerQualityControl(c.prots, df)

cls <- svmClassification(r.markers, df, markerProteins)

test.A <- cls[[1]]$svm.test.prob.out
test.B <- cls[[2]]$svm.test.prob.out

t.c.df <- computeThresholdCompartment(test.A, test.B)

t.n.df <- computeThresholdNeighborhood(test.A, test.B)

all.A <- cls[[1]]$all.prot.pred
all.B <- cls[[2]]$all.prot.pred

c.cls.df <- applyThresholdCompartment(all.A, all.B, t.c.df)

n.cls.df <- applyThresholdNeighborhood(all.A, all.B, t.n.df)

cls.df  <- mergeCls(c.cls.df, n.cls.df)

candidate.df <- candidateRelocatedProteins(cls.df,hcc827CtrlPSMCount,
hcc827Ctrl, hcc827GEFClass, hcc827CtrlPSMCount, hcc827GEF)

candidate.df <- candidateRelocatedProteins(cls.df, hcc827CtrlPSMCount,
hcc827Ctrl, hcc827GEFClass, hcc827CtrlPSMCount, hcc827GEF,
annotation = TRUE, min.psm = 12, pearson.cor = 0.8)

}
}
